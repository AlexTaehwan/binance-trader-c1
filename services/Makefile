SED_PWD=$(shell (echo $(shell pwd) | sed 's_/_\\/_g'))
SED_PARENT_PWD=$(shell (dirname $(shell pwd) | sed 's_/_\\/_g')))
POD_DC_NAME=kubectl -n dev get pods | grep data-collector | awk '{print $$1}'
POD_DB_NAME=kubectl -n dev get pods | grep database | awk '{print $$1}'
POD_TD_NAME=kubectl -n dev get pods | grep trader | awk '{print $$1}'

define GENERATE_YML
	cat "$(shell pwd)/k8s/deployments-template/$1-template.yml" |\
	sed "s/{{PWD}}/$(SED_PWD)/g" |\
	sed "s/{{PARENT_PWD}}/$(SED_PARENT_PWD)/g" |\
	sed "s/{{EXP_NAME}}/$2/g" |\
	sed "s/{{REPORT_PREFIX}}/$3/g" |\
	sed "s/{{REPORT_BASE_CURRENCY}}/$4/g" |\
	sed "s/{{REPORT_ID}}/$5/g" >\
	$(shell pwd)/k8s/deployments/$1.yml
endef

_mkdirs:
	@mkdir -p $(shell pwd)/storage/database
	@mkdir -p $(shell pwd)/k8s/deployments

_build_ymls:
	@read -p "EXP_NAME: " EXP_NAME; EXP_NAME=$${EXP_NAME:-v001}; \
	read -p "REPORT_PREFIX: " REPORT_PREFIX; REPORT_PREFIX=$${REPORT_PREFIX:-V1_CSET2}; \
	read -p "REPORT_BASE_CURRENCY: " REPORT_BASE_CURRENCY; REPORT_BASE_CURRENCY=$${REPORT_BASE_CURRENCY:-USDT}; \
	read -p "REPORT_ID: " REPORT_ID; REPORT_ID=$${REPORT_ID:-\"9\"}; \
	$(call GENERATE_YML,database,$$EXP_NAME,$$REPORT_PREFIX,$$REPORT_BASE_CURRENCY,$$REPORT_ID);\
	$(call GENERATE_YML,data_collector,$$EXP_NAME,$$REPORT_PREFIX,$$REPORT_BASE_CURRENCY,$$REPORT_ID);\
	$(call GENERATE_YML,trader,$$EXP_NAME,$$REPORT_PREFIX,$$REPORT_BASE_CURRENCY,$$REPORT_ID)

_apply:
	@kubectl apply -f $(shell pwd)/k8s/admin/namespace.yml
	@kubectl apply -f $(shell pwd)/k8s/deployments/database.yml
	@kubectl apply -f $(shell pwd)/k8s/deployments/data_collector.yml
	@kubectl apply -f $(shell pwd)/k8s/deployments/trader.yml
	@kubectl apply -f $(shell pwd)/k8s/service/service.yml

reapply:
	@kubectl delete -f $(shell pwd)/k8s/admin/namespace.yml
	@$(MAKE) _apply

_build_container:
	docker build dockerfiles -t binance_trader_services:latest
	docker pull postgres:latest

_run_if_not_exists: _mkdirs _build_ymls
ifneq ($(shell minikube status | grep host | cut -d ' ' -f 2),Running)
	@minikube start --mount-string="$(shell pwd):$(shell pwd)" --mount && \
	eval $$(minikube docker-env) && \
	$(MAKE) _build_container
endif
	@echo

install_on_mac:
	brew install kubectl minikube
	brew cask install virtualbox virtualbox-extension-pack

install_on_ubuntu:
	sudo apt update -y
	sudo apt install -y virtualbox virtualbox-ext-pack

	wget https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
	sudo cp minikube-linux-amd64 /usr/local/bin/minikube
	sudo chmod +x /usr/local/bin/minikube

	curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
	sudo chmod +x ./kubectl
	sudo mv ./kubectl /usr/local/bin/kubectl

run: _run_if_not_exists
	@$(MAKE) _apply

rm:
	@kubectl delete -f $(shell pwd)/k8s/admin/namespace.yml; \
	minikube stop

delete:
	minikube delete

pods:
	@kubectl -n dev get pods

db_bash:
	@kubectl -n dev exec -it $(shell $(POD_DB_NAME)) -- bash

dc_bash:
	@kubectl -n dev exec -it $(shell $(POD_DC_NAME)) -- bash

td_bash:
	@kubectl -n dev exec -it $(shell $(POD_TD_NAME)) -- bash